{"version":3,"sources":["components/ErrorIcon.tsx","components/SingUpForm.tsx","hooks/useForm.tsx","pages/LoginPage.tsx","App.tsx","index.tsx"],"names":["ErrorIcon","props","className","width","height","xmlns","fill","fillRule","cx","cy","r","x","y","rx","SingUpForm","useState","firstNameError","lastNameError","emailError","password","newErrors","setnewErrors","initialState","form","setForm","handleChange","target","name","value","useForm","firstName","lastName","email","validateForm","errors","trim","test","console","log","type","autoComplete","placeholder","onChange","onClick","ev","preventDefault","LoginPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ef794f7.chunk.js","sourcesContent":["import React, {SVGProps} from 'react';\n\ninterface Props extends SVGProps<SVGSVGElement>{} \n\nexport const ErrorIcon = (props: Props) => {\n    return (\n        <svg className='error-icon' width={24} height={24} xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <g fill=\"none\" fillRule=\"evenodd\">\n                <circle fill=\"#FF7979\" cx={12} cy={12} r={12} />\n                <rect fill=\"#FFF\" x={11} y={6} width={2} height={9} rx={1} />\n                <rect fill=\"#FFF\" x={11} y={17} width={2} height={2} rx={1} />\n            </g>\n        </svg>\n    )\n}\n","\nimport { FormEvent, useState } from 'react';\nimport { useForm } from '../hooks/useForm'\nimport { ErrorIcon } from './ErrorIcon'\n\ninterface FormData {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n}\n\nexport const SingUpForm = () => {\n\n    const [newErrors, setnewErrors] = useState({\n        firstNameError: '',\n        lastNameError: '',\n        emailError: '',\n        password: ''\n    })\n\n    const { form, handleChange } = useForm<FormData>({\n        firstName: 'Diego',\n        lastName: 'Ceron',\n        email: 'test@gmail.com',\n        password: '12345678'\n    });\n\n    const { firstName, lastName, email, password } = form;\n\n    const handleSubmit = (ev: FormEvent<HTMLButtonElement>) => {\n        ev.preventDefault();\n        validateForm();\n    }\n\n    const validateForm = () => {\n        let errors = {\n            firstNameError: '',\n            lastNameError: '',\n            emailError: '',\n            password: ''\n        }\n\n        if (!firstName.trim()) {\n            errors.firstNameError = 'First Name cannot be empty'\n        }\n\n        if (!lastName.trim()) {\n            errors.lastNameError = 'Last Name cannot be empty'\n        }\n\n        if (!email.trim()) {\n            errors.emailError = 'Email Address cannot be empty'\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9]+\\.[A-Z]+$/i.test(email)) {\n            errors.emailError = 'Looks like this is not an email'\n        }\n\n        if (!password.trim()) {\n            errors.password = 'Password cannot be empty'\n        }\n\n        setnewErrors(errors);\n        console.log(newErrors)\n    }\n\n\n    return (\n        <div className='login__form-container' >\n            <div className=\"login__offer\">\n                <p className='login__offer-text' ><b>Try it free 7 days</b> then $20/mo. thereafter</p>\n            </div>\n            <div className=\"login__form-wrapper\">\n                <form >\n                    <div className=\"login__form-input-container\">\n                        <input className={` login__form-input ${ newErrors.firstNameError !== '' && 'error' }`}\n                            type=\"text\"\n                            name=\"firstName\"\n                            autoComplete='off'\n                            placeholder='First Name'\n                            value={firstName}\n                            onChange={handleChange}\n                        />\n                        {\n                            newErrors.firstNameError !== '' &&\n                            <ErrorIcon />\n                        }\n                    </div>\n                    <span className='login__form-error ' >{newErrors.firstNameError}</span>\n                    <div className=\"login__form-input-container\">\n                        <input className={` login__form-input ${ newErrors.lastNameError !== '' && 'error' }`}\n                            type=\"text\"\n                            name=\"lastName\"\n                            autoComplete='off'\n                            placeholder='Last Name'\n                            value={lastName}\n                            onChange={handleChange}\n                        />\n                        {\n                            newErrors.lastNameError !== '' &&\n                            <ErrorIcon />\n                        }\n                    </div>\n                    <span className='login__form-error' >{newErrors.lastNameError}</span>\n                    <div className=\"login__form-input-container\">\n                        <input className={` login__form-input ${ newErrors.emailError !== '' && 'error' }`}\n                            type=\"email\"\n                            name=\"email\"\n                            autoComplete=\"username\"\n                            placeholder='Email Address'\n                            value={email}\n                            onChange={handleChange}\n                        />\n                        {\n                            newErrors.emailError !== '' &&\n                            <ErrorIcon />\n                        }\n                    </div>\n                    <span className='login__form-error' >{newErrors.emailError}</span>\n                    <div className=\"login__form-input-container\">\n                        <input className={ ` login__form-input ${ newErrors.password !== '' && 'error' }` }\n                            type=\"password\"\n                            name=\"password\"\n                            autoComplete='current-password'\n                            placeholder='Password'\n                            value={password}\n                            onChange={handleChange}\n                        />\n                        {\n                            newErrors.password !== '' &&\n                            <ErrorIcon />\n                        }\n                    </div>\n                    <span className='login__form-error' >{newErrors.password}</span>\n                    <button type='submit' className='login__form-button' onClick={handleSubmit} >Claim your free trial</button>\n                </form>\n                <p className='login__form-terms' >By clicking the button, you are agreeing to our <b>Terms and Services</b></p>\n            </div>\n        </div>\n    )\n}\n","\nimport { useState, ChangeEvent} from 'react';\n\nexport const useForm = <T extends Object>(initialState: T) => {\n\n    const [form, setForm] = useState(initialState);\n\n    const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n\n        const { name, value } = target;\n        setForm({\n            ...form,\n            [name]: value\n        })\n    }\n\n    return {\n        form,\n        handleChange,\n    }\n\n}\n","import { SingUpForm } from \"../components/SingUpForm\"\n\nexport const LoginPage = () => {\n    return (\n        <div className='login' >\n            <div className=\"login__data\">\n                <h1 className=\"login__title\">Learn to code by watching others</h1>\n                <p className=\"login__description\">\n                    See how experienced developers solve problems in real-time. Watching scripted tutorials is great, but understanding how developers think is invaluable.\n                </p>\n            </div>\n            <SingUpForm />\n        </div>\n    )\n}\n","import { LoginPage } from \"./pages/LoginPage\";\n\nimport './styles/style.scss'\n\nconst App = () => {\n    return (\n        <LoginPage />\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}